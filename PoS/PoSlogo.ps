%!PS-Adobe-3.1 EPSF-3.0
%%Title: testata_DOC.eps
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0%AI9_PrintingDataBegin%%For: Pippo Pluto
%%CreationDate: 10/1/2004
%%CropBox: 0.000000 0.000000 428.655273 44.812988
%%BoundingBox: 0 0 429 45 
%%HiResBoundingBox: 0.000000 0.000000 428.655273 44.812988
%%LanguageLevel: 2 
%%DocumentData: Clean7Bit
%%Pages: 1 
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Core 2.0 0
%%DocumentFonts: 
%%DocumentSuppliedFonts: 
%%PageOrder: Ascend
%%DocumentCustomColors: (PANTONE DS 284-5 U) 
%%+ (PANTONE DS 296-1 U) 
%%+ (PANTONE DS 273-1 U) 
%%CMYKCustomColor: 
%%RGBCustomColor: 0.509796 0.705872 0.423523 (PANTONE DS 284-5 U) 
%%+ 0.399994 0.611755 0.0862732 (PANTONE DS 296-1 U) 
%%+ 0 0.325485 0.164703 (PANTONE DS 273-1 U) 

%%EndComments
%%BeginDefaults
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 233 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_dst64 64 string def
/AGMCORE_srcLen nd
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_imagestring0 nd
/AGMCORE_imagestring1 nd
/AGMCORE_imagestring2 nd
/AGMCORE_imagestring3 nd
/AGMCORE_imagestring4 nd
/AGMCORE_imagestring5 nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_mbuf () def
/AGMCORE_ybuf () def
/AGMCORE_kbuf () def
/AGMCORE_gbuf () def
/AGMCORE_bbuf () def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_arg1 nd
/AGMCORE_arg2 nd
/AGMCORE_&setgray nd
/AGMCORE_&image nd
/AGMCORE_&colorimage nd
/AGMCORE_&imagemask nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&&setcolorspace nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_in_rip_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ccimage_exists nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_ndx nd
/AGMCORE_err_strings nd
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/bdf
{
	bind def
} bind def
/xdf
{
	exch def
} def
/ldf 
{
	load def
} def
/ddf
{
	put
} def	
/xddf
{
	3 -1 roll put
} def	
/xpt
{
	exch put
} def
	/bdict
	{
		mark
	} def
	
	/edict
	{
		counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
	}def
	
/ps_level
	/languagelevel where{
		pop languagelevel
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/ndf
{
	1 index where{
		pop pop pop
	}{
		dup xcheck
		{bind}if
		def
	}ifelse
} def
/skip_image
{
	has_color ne{
		dup 256 idiv
		{currentfile AGMCORE_str256 readstring pop pop}repeat
		currentfile AGMCORE_str256 0 4 -1 roll 256 mod getinterval
		readstring pop pop
	}{
		pop
	}ifelse
} def
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
} def
/colorbuf
{
	0 1 2 index length 1 sub
		{
		dup 2 index exch get 
		255 exch sub 
		2 index 
		3 1 roll 
		put
		} for
} def
/makereadonlyarray
{
	/packedarray where
		{pop packedarray}
		{array astore readonly}
	ifelse
} def
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq 
	{
		dup /HalftoneType get 1 eq
			{
			/SpotFunction get
			}
			{
			dup /HalftoneType get 2 eq
				{
				/GraySpotFunction get
				}
				{
				pop
				{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 sub}
				{dup mul exch dup mul add 1 exch sub}ifelse}bind
				}
			ifelse
			}
		ifelse
	}
	if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	userdict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	/AGMCORE_arg2 xdf
	/AGMCORE_arg1 xdf
	
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			dup (.) ne AGMCORE_arg1 0 lt and
				{
				pop
				}
				{
				stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
					{
					currentpoint AGMCORE_deltaY sub exch pop
					clippath pathbbox pop pop pop 44 add exch moveto
					} if
				AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
				} ifelse
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
			dup 94 eq 
				{
				pop
				AGMCORE_arg1 0 ge
					{
					AGMCORE_arg1 AGMCORE_str256 cvs
					dup /AGMCORE_tmp exch length def
					AGMCORE_str256 exch 0 exch putinterval
					AGMCORE_str256 0 AGMCORE_tmp getinterval
					stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
						{
						currentpoint AGMCORE_deltaY sub exch pop
						clippath pathbbox pop pop pop 44 add exch moveto
						} if
					AGMCORE_str256 0 AGMCORE_tmp getinterval show
					}
					{
					/AGMCORE_arg1 0 def
					} ifelse
				0 1 AGMCORE_str256 length 1 sub
					{
					AGMCORE_str256 exch 0 put
					}for
				/AGMCORE_tmp 0 def
				AGMCORE_arg1 0 ne
					{
					/AGMCORE_arg1 AGMCORE_arg2 def
					} if
				}
				{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
				}ifelse
			} ifelse
		} forall
} bdf
level2{
	/AGMCORE_map_reserved_ink_name
	{
		dup type /stringtype eq{
			dup /Red eq{
				pop (_Red_)
			}{
				dup /Green eq{
					pop (_Green_)
				}{
					dup /Blue eq{
						pop (_Blue_)
					}{
						dup /Cyan eq{
							pop (_Cyan_)
						}{
							dup /Magenta eq{
								pop (_Magenta_)
							}{
								dup /Yellow eq{
									pop (_Yellow_)
								}{
									dup /Black eq{
										pop (_Black_)
									}{
										dup / eq{
											pop (Process)
										}if
									}ifelse
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}if
	}def
}if
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not
		{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror
			{
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and {
				$error /newerror false put
				AGMCORE_cur_err /AGMCORE_bad_environ eq
					{
					/AGMCORE_bad_environ AGMCORE_ps_level AGMCORE_ps_version
					}
					{
					AGMCORE_cur_err 0 0
					} ifelse
				compose_error_msg
				} if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
		/AGMCORE_&&setcolorspace /setcolorspace ldf
	}if
	/AGMCORE_&image systemdict/image get def
	/AGMCORE_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMCORE_&colorimage /colorimage ldf
	}if
	/AGMCORE_in_rip_sep
		level2{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_gstate_known{
		where{
			/Adobe_AGM_Core_Id known
		}{
			false
		}ifelse
	}ndf
	/AGMCORE_GSTATE AGMCORE_gstate_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 7 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	end
}def
/page_setup
{
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/AGMCORE_ccimage_exists /customcolorimage where {pop true}{false} ifelse def
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and AGMCORE_producing_seps or
		}ifelse
	def
	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots
	}ifelse
	{
		/setcmykcolor[
			{4 copy add add add 0 eq currentoverprint and{pop 0.0005}if}/exec cvx
			/setcmykcolor load dup type/operatortype ne{/exec cvx}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/ln /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		/invert_image_samples
		{
			Adobe_AGM_Core/AGMCORE_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
		/get_gstate
		{
			AGMCORE_GSTATE begin
			/AGMCORE_GSTATE_ctm AGMCORE_tmpmatrix currentmatrix def
			/AGMCORE_GSTATE_clr_spc currentcolorspace def
			/AGMCORE_GSTATE_clr_indx 0 def
			/AGMCORE_GSTATE_clr_comps 12 array def
			mark currentcolor counttomark
				{AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 3 -1 roll put
				/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 add def} repeat pop
			/AGMCORE_GSTATE_fnt rootfont def
			/AGMCORE_GSTATE_lw currentlinewidth def
			/AGMCORE_GSTATE_lc currentlinecap def
			/AGMCORE_GSTATE_lj currentlinejoin def
			/AGMCORE_GSTATE_ml currentmiterlimit def
			currentdash /AGMCORE_GSTATE_do xdf /AGMCORE_GSTATE_da xdf
			/AGMCORE_GSTATE_sa currentstrokeadjust def
			
			/AGMCORE_GSTATE_clr_rnd currentcolorrendering def
			/AGMCORE_GSTATE_op currentoverprint def
			/AGMCORE_GSTATE_bg currentblackgeneration cvlit def
			/AGMCORE_GSTATE_ucr currentundercolorremoval cvlit def
			currentcolortransfer 
				cvlit /AGMCORE_GSTATE_gy_xfer xdf 
				cvlit /AGMCORE_GSTATE_b_xfer xdf
				cvlit /AGMCORE_GSTATE_g_xfer xdf 
				cvlit /AGMCORE_GSTATE_r_xfer xdf
			/AGMCORE_GSTATE_ht currenthalftone def
			/AGMCORE_GSTATE_flt currentflat def
			end
		}ndf
		
		/set_gstate
		{
			AGMCORE_GSTATE begin
			AGMCORE_GSTATE_ctm setmatrix
			AGMCORE_GSTATE_clr_spc setcolorspace
			AGMCORE_GSTATE_clr_indx {AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 1 sub get
			/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 sub def} repeat setcolor
			AGMCORE_GSTATE_fnt setfont
			AGMCORE_GSTATE_lw setlinewidth
			AGMCORE_GSTATE_lc setlinecap
			AGMCORE_GSTATE_lj setlinejoin
			AGMCORE_GSTATE_ml setmiterlimit
			AGMCORE_GSTATE_da AGMCORE_GSTATE_do setdash
			AGMCORE_GSTATE_sa setstrokeadjust
			
			AGMCORE_GSTATE_clr_rnd setcolorrendering
			AGMCORE_GSTATE_op setoverprint
			AGMCORE_GSTATE_bg cvx setblackgeneration
			AGMCORE_GSTATE_ucr cvx setundercolorremoval
			AGMCORE_GSTATE_r_xfer cvx AGMCORE_GSTATE_g_xfer cvx AGMCORE_GSTATE_b_xfer cvx
				AGMCORE_GSTATE_gy_xfer cvx setcolortransfer
			AGMCORE_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
				{
				currenthalftone /HalftoneType get AGMCORE_GSTATE_ht /HalftoneType get ne
					{
					  mark AGMCORE_GSTATE_ht {sethalftone} stopped cleartomark
					} if
				}{
				AGMCORE_GSTATE_ht sethalftone
				} ifelse
			AGMCORE_GSTATE_flt setflat
			end
		}ndf
		AGMCORE_producing_seps not{
	
			/setcolorspace where{
				/Adobe_AGM_Core_Id known not
			}{
				true
			}ifelse
			{
				/setcolorspace
				{
					dup type dup /arraytype eq exch /packedarraytype eq or{
						dup 0 get dup /Separation eq{
							pop
							[ exch {} forall ]
							dup dup 1 get AGMCORE_map_reserved_ink_name 1 exch put
						}{
							/DeviceN eq {
								[ exch {} forall ]
								dup dup 1 get [ exch {AGMCORE_map_reserved_ink_name} forall ] 1 exch put
							}if
						}ifelse
					}if
					AGMCORE_&&setcolorspace 
				}def
			}if
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/ln{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/op /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/Adobe_AGM_Core 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	Adobe_AGM_Core/AGMCORE_name xddf
	false
	currentpagedevice/SeparationColorNames get{
		AGMCORE_name eq or
	}forall
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	1 setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMCORE_&imagemask
			}{
				AGMCORE_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMCORE_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMCORE_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/rdline {
	currentfile AGMCORE_str256 readline pop
} def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMCORE_src256 readstring pop
		dup length /AGMCORE_srcLen exch def
		/AGMCORE_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMCORE_srcLen 1 sub{
			1 index exch get
			AGMCORE_dst64 AGMCORE_ndx 3 -1 roll put
			/AGMCORE_ndx AGMCORE_ndx 1 add def
		}for
		pop
		AGMCORE_dst64 0 AGMCORE_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
	 						currentoverprint not{
			 					1 AGMCORE_&setgray
	 							knockout_image_samples
			 					currentdict imageormask_sys
			 				}{
			 					nulldevice currentdict imageormask_sys
			 				}ifelse
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										nulldevice
									}{
										invert_image_samples
									}ifelse
								}{
		 							currentoverprint not{
		 								knockout_image_samples
				 					}{
				 						nulldevice
				 					}ifelse
					 			}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
									
								currentcolortransfer
								{pop 1} exch addprocs 4 1 roll				
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								setcolortransfer
									
								MultipleDataSources NComponents AGMCORE_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
		 								currentoverprint not{
		 									knockout_image_samples
				 						}{
				 							nulldevice
				 						}ifelse
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/tint_image_to_color
{
	begin
		Width Height BitsPerComponent ImageMatrix 
		/DataSource load
	end
	Adobe_AGM_Core begin
		/AGMCORE_mbuf 0 string def
		/AGMCORE_ybuf 0 string def
		/AGMCORE_kbuf 0 string def
		{
			colorbuf dup length AGMCORE_mbuf length ne
				{
				dup length dup dup
				/AGMCORE_mbuf exch string def
				/AGMCORE_ybuf exch string def
				/AGMCORE_kbuf exch string def
				} if
			dup AGMCORE_mbuf copy AGMCORE_ybuf copy AGMCORE_kbuf copy pop
		}
		addprocs
		{AGMCORE_mbuf}{AGMCORE_ybuf}{AGMCORE_kbuf} true 4 colorimage	
	end
} def			
/sep_imageormask_lev1
{
	begin
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{
				255 mul round cvi GrayLookup exch get
			} currenttransfer addprocs settransfer
			currentdict imageormask
		}{
			/sep_colorspace_dict AGMCORE_gget/Components known{
				MappedCSA 0 get /DeviceCMYK eq{
					Components aload pop
				}{
					0 0 0 Components aload pop 1 exch sub
				}ifelse
				
				Adobe_AGM_Core/AGMCORE_k xddf 
				Adobe_AGM_Core/AGMCORE_y xddf 
				Adobe_AGM_Core/AGMCORE_m xddf 
				Adobe_AGM_Core/AGMCORE_c xddf 
					
				AGMCORE_y 0.0 eq AGMCORE_m 0.0 eq and AGMCORE_c 0.0 eq and{
					{AGMCORE_k mul 1 exch sub} currenttransfer addprocs settransfer
					currentdict imageormask
				}{ 
					
					currentcolortransfer
					{AGMCORE_k mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_y mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_m mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_c mul 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer
					currentdict tint_image_to_color
				}ifelse
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
					currentdict imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	end
}def
/sep_image_lev1_sep
{
	begin
		/sep_colorspace_dict AGMCORE_gget/Components known{
			Components aload pop
			
			Adobe_AGM_Core/AGMCORE_k xddf 
			Adobe_AGM_Core/AGMCORE_y xddf 
			Adobe_AGM_Core/AGMCORE_m xddf 
			Adobe_AGM_Core/AGMCORE_c xddf 
				
			{AGMCORE_c mul 1 exch sub}
			{AGMCORE_m mul 1 exch sub}
			{AGMCORE_y mul 1 exch sub}
			{AGMCORE_k mul 1 exch sub}
		}{ 
			{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
		}ifelse
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMCORE_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or{
 								knockout_image_samples
		 					}{
		 						nulldevice 
		 					}ifelse
							currentdict imageormask_sys
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/read_image_file
{
	AGMCORE_imagefile 0 setfileposition
	dup /DataSource {AGMCORE_imagefile AGMCORE_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	{ (AGMCORE_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Core/AGMCORE_imagefile xddf 
		Adobe_AGM_Core/AGMCORE_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMCORE_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMCORE_imagefile exch writestring
		}for
		true
	}ifelse
}def
/imageormask_l2_overprint
{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
		AGMCORE_imagefile closefile (AGMCORE_imagefile) deletefile
	}{
		currentdict imageormask
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				nulldevice currentdict imageormask_sys
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_imageormask_lev1
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		currentdict
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
			imageormask
		}{
			
			MappedCSA 0 get /DeviceGray eq {
				{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceCMYK eq {
					currentcolortransfer
					{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}{ 
					currentcolortransfer
					{pop 1} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}ifelse
			}ifelse
		}ifelse
	end end
}def
/indexed_image_lev1_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMCORE_&imagemask
		}{
			AGMCORE_&image
		}ifelse
			
	end end
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false op [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/MultipleDataSources false def
			/NComponents 1 def
			/ImageType 1 def
			/Decode [0 1 def]
			/SkipImageProc {false} def
			currentdict
		end
	}if
	dup begin
		/HostSepColorImage false def
		currentdict/Decode known not{
			/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
			] 
			def
		}if
		currentdict/Operator known not{
			/Operator /image def
		}if
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/cpaint_gcomp
{
	AGM_preserve_spots{
		gsave
		nulldevice
	}if
}def
/cpaint_gsep
{
	AGM_preserve_spots{
		grestore
		currentoverprint Adobe_AGM_Core/AGMCORE_ovp xddf 
	}{	
		gsave
		nulldevice
	}ifelse
}def
/cpaint_gend
{
	AGM_preserve_spots{
		Adobe_AGM_Core/AGMCORE_ovp get setoverprint
	}{
		grestore
	}ifelse
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_AGM_Core/AGMCORE_err_strings 3 dict dup begin
/AGMCORE_bad_environ (Environment not satisfactory for this job, which requests at least
PostScript Level ^	and at least PostScript version ^. Ensure that the PPD is correct or that
the PostScript  level requested is supported by this printer. ) def
/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate
with on-host methods. ) def
/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end put
2 2010 true Adobe_AGM_Core/doc_setup get exec
%%EndSetup
%%Page: name:1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Core/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
1 -1 scale 0 -44.813 translate
gsave
[1 0 0 1 0 0 ] concat
gsave
0 0 mo
0 44.813 ln
428.655 44.813 ln
428.655 0 ln
clp
12.2471 9.19189 mo
12.2471 30.498 ln
12.2231 32.9766 ln
12.2935 35.123 ln
12.4663 37.1831 13.1699 38.3843 14.4097 38.7251 cv
15.2725 38.98 15.9219 39.1079 16.3608 39.1079 cv
16.8325 39.1079 17.0737 39.2549 17.0894 39.5459 cv
17.1226 39.9658 16.8457 40.1787 16.2651 40.1787 cv
15.9956 40.1787 15.4673 40.1309 14.6807 40.0381 cv
14.1772 39.9897 13.3584 39.9658 12.2251 39.9658 cv
10.5479 39.8955 ln
8.70459 39.9248 ln
7.77637 39.9248 7.07568 39.9624 6.604 40.0381 cv
5.98975 40.1309 5.54053 40.1787 5.25732 40.1787 cv
4.84717 40.1787 4.64404 40.0146 4.64404 39.6909 cv
4.64404 39.3857 4.90479 39.189 5.4292 39.1079 cv
6.66602 38.9048 7.51123 38.1582 7.96289 36.8696 cv
8.41504 35.5811 8.64209 33.2568 8.64209 29.8989 cv
8.64209 14.4565 ln
8.64209 10.894 8.44482 8.64355 8.04932 7.70313 cv
7.65625 6.76074 6.66846 6.19727 5.08984 6.00928 cv
4.66211 5.97559 4.45996 5.79688 4.47461 5.47754 cv
4.49072 5.07031 4.7959 4.86426 5.39355 4.86426 cv
5.69238 4.86426 6.09326 4.90381 6.59717 4.9873 cv
7.5874 5.13135 8.40381 5.20459 9.04932 5.20459 cv
10.0557 5.20459 11.5156 5.1123 13.4346 4.93262 cv
14.4263 4.85156 15.2334 4.81006 15.8638 4.81006 cv
19.1479 4.81006 21.8164 5.65869 23.8662 7.36279 cv
25.9199 9.06445 26.9473 11.2856 26.9473 14.0303 cv
26.9473 17.3506 25.6875 19.9678 23.1719 21.8809 cv
21.2822 23.3032 19.2856 24.0151 17.1772 24.0151 cv
16.186 24.0151 15.2773 23.8994 14.4521 23.6729 cv
13.625 23.4424 13.229 23.1982 13.2598 22.937 cv
13.2925 22.7354 13.4399 22.6328 13.7075 22.6328 cv
13.832 22.6328 13.9897 22.6597 14.1797 22.71 cv
14.5391 22.8291 15.1226 22.8877 15.9243 22.8877 cv
18.188 22.8877 19.998 22.2163 21.3574 20.873 cv
22.7183 19.5293 23.3979 17.7441 23.3979 15.5161 cv
23.3979 12.9458 22.5049 10.8198 20.7163 9.13672 cv
18.9272 7.4541 16.6626 6.6123 13.9165 6.6123 cv
13.2881 6.6123 12.8589 6.73975 12.6245 6.99609 cv
12.3867 7.24951 12.2705 7.73584 12.2705 8.45166 cv
12.2471 9.19189 ln
false op
/0 
<<
/Name (PANTONE DS 273-1 U) 
/CSA /2 
/TintMethod /Additive
/TintProc null
/MappedCSA null
/NComponents 3 
/Components [ 0 0.325485 0.164703 ] 
>>
add_csd
/0 get_csd
sepcs
1 sep
f
44.3433 4.729 mo
46.0942 4.729 47.5762 4.98926 48.7876 5.50879 cv
50.4854 6.23779 ln
50.6309 6.3042 50.7769 6.3374 50.9248 6.3374 cv
51.1201 6.3374 51.3164 6.25439 51.5107 6.0874 cv
51.853 5.78564 ln
51.9028 5.71924 51.9927 5.68555 52.123 5.68555 cv
52.5288 5.66943 52.7339 6.07666 52.7339 6.90869 cv
52.7339 7.19141 52.8394 8.03271 53.0566 9.4292 cv
53.4551 11.998 ln
53.5356 12.5488 53.5791 12.8911 53.5791 13.0234 cv
53.5791 13.5381 53.3994 13.7969 53.043 13.7969 cv
52.7705 13.7969 52.4976 13.3945 52.2266 12.5918 cv
51.6406 10.7837 50.4473 9.29248 48.6504 8.12012 cv
46.8525 6.94824 44.8462 6.3623 42.6328 6.3623 cv
40.8735 6.3623 39.4063 6.89209 38.2266 7.95605 cv
37.0464 9.01758 36.4565 10.3433 36.4565 11.9312 cv
36.4565 13.335 36.8398 14.5479 37.6079 15.5674 cv
38.2769 16.437 39.0083 17.0723 39.7998 17.4736 cv
40.5918 17.8755 42.54 18.6035 45.6406 19.6572 cv
51.6836 21.6729 54.7051 24.9819 54.7051 29.5845 cv
54.7051 32.7017 53.5942 35.2515 51.3691 37.2349 cv
49.146 39.2188 46.2935 40.2109 42.8101 40.2109 cv
41.5518 40.2109 40.1655 40.0293 38.6538 39.6675 cv
37.1396 39.3047 36.0322 38.8872 35.3296 38.4082 cv
35.0317 38.2085 34.8325 37.9971 34.7354 37.772 cv
34.6343 37.5469 34.4873 36.9688 34.2871 36.0371 cv
34.2524 35.9043 34.0469 35.1489 33.668 33.7676 cv
33.2354 32.2676 33.0205 31.2026 33.0205 30.5723 cv
33.0205 30.0718 33.1875 29.832 33.52 29.8477 cv
33.8193 29.8647 34.0859 30.2715 34.3174 31.0708 cv
34.9048 33.1323 36.1484 34.8613 38.043 36.2583 cv
39.938 37.6543 41.9971 38.3525 44.2188 38.3525 cv
46.4741 38.3525 48.3799 37.6768 49.9414 36.3257 cv
51.5029 34.9727 52.2842 33.3281 52.2842 31.3926 cv
52.2842 29.5405 51.5635 27.98 50.1235 26.7114 cv
49.3877 26.0605 47.2603 25.1333 43.7422 23.9321 cv
40.1113 22.6836 37.5356 21.2998 36.0225 19.7813 cv
34.5093 18.2666 33.7544 16.2988 33.7544 13.8809 cv
33.7544 11.1792 34.7393 8.97949 36.7139 7.27832 cv
38.687 5.57813 41.2305 4.729 44.3433 4.729 cv
/0 get_csd
sepcs
1 sep
f
57.79 0 mo
0 0 ln
0 44.813 ln
59.5908 44.813 ln
59.5908 0 ln
57.79 0 ln
cp
55.9863 3.60449 mo
55.9863 6.75244 55.9863 38.0615 55.9863 41.2085 cv
52.7227 41.2085 6.86865 41.2085 3.60303 41.2085 cv
3.60303 38.0615 3.60303 6.75244 3.60303 3.60449 cv
6.86865 3.60449 52.7227 3.60449 55.9863 3.60449 cv
/1 
<<
/Name (PANTONE DS 296-1 U) 
/CSA /2 
/TintMethod /Additive
/TintProc null
/MappedCSA null
/NComponents 3 
/Components [ 0.399994 0.611755 0.0862732 ] 
>>
add_csd
/1 get_csd
sepcs
1 sep
f
33.6904 26.5811 mo
33.3765 27.3091 32.9985 28.085 32.5522 28.9072 cv
32.002 29.9189 31.186 30.5972 30.0967 30.9458 cv
29.0107 31.2949 27.9238 31.2373 26.8384 30.7739 cv
25.7363 30.3008 24.936 29.5513 24.437 28.5244 cv
23.938 27.4961 23.8604 26.4453 24.208 25.3667 cv
24.5527 24.2891 24.8447 23.4751 25.0796 22.9272 cv
25.481 21.9858 25.8613 21.21 26.2197 20.5981 cv
26.7974 19.6006 27.6323 18.9272 28.7207 18.5801 cv
29.8071 18.231 30.8867 18.2866 31.957 18.7437 cv
33.0415 19.207 33.8306 19.9487 34.3252 20.9634 cv
34.8203 21.9814 34.9077 23.0405 34.5874 24.1494 cv
34.3911 24.8315 34.0918 25.6426 33.6904 26.5811 cv
cp
31.6714 25.7217 mo
31.6616 25.7456 ln
32.1606 24.5801 32.4644 23.7974 32.5776 23.4043 cv
32.7451 22.8262 32.7007 22.2544 32.4336 21.689 cv
32.1685 21.124 31.7681 20.7261 31.2329 20.5 cv
30.6821 20.2632 30.1157 20.2446 29.5313 20.4438 cv
28.9473 20.6445 28.5093 20.9966 28.2178 21.5015 cv
27.8672 22.0962 27.4985 22.8452 27.1104 23.7495 cv
26.6689 24.7847 26.3726 25.564 26.2246 26.0933 cv
26.0542 26.6694 26.103 27.2354 26.3755 27.79 cv
26.6445 28.3467 27.0483 28.7388 27.5825 28.9668 cv
28.1323 29.2017 28.6973 29.2246 29.2769 29.0356 cv
29.8569 28.8457 30.2944 28.4917 30.5938 27.9712 cv
30.8726 27.5024 31.231 26.7505 31.6714 25.7217 cv
/2 
<<
/Name (PANTONE DS 284-5 U) 
/CSA /2 
/TintMethod /Additive
/TintProc null
/MappedCSA null
/NComponents 3 
/Components [ 0.509796 0.705872 0.423523 ] 
>>
add_csd
/2 get_csd
sepcs
1 sep
f
428.655 44.8125 mo
59.082 44.8125 ln
59.082 0 ln
428.655 0 ln
428.655 44.8125 ln
/1 get_csd
sepcs
1 sep
f
303.306 22.7466 mo
304.696 22.7466 305.835 23.2124 306.723 24.1396 cv
307.618 25.0708 308.063 26.2607 308.063 27.7109 cv
308.063 29.248 307.615 30.5098 306.717 31.4941 cv
305.819 32.4795 304.671 32.9722 303.27 32.9722 cv
301.835 32.9722 300.673 32.501 299.786 31.5591 cv
298.901 30.6177 298.456 29.3828 298.456 27.855 cv
298.456 27.1914 298.573 26.5356 298.808 25.8853 cv
299.039 25.2339 299.354 24.6885 299.75 24.2529 cv
300.169 23.791 300.698 23.4258 301.335 23.1533 cv
301.979 22.8818 302.633 22.7466 303.306 22.7466 cv
cp
302.869 23.2163 mo
301.836 23.2163 301.016 23.5903 300.409 24.3418 cv
299.802 25.0942 299.497 26.1035 299.497 27.376 cv
299.497 28.8306 299.884 30.0562 300.66 31.0547 cv
301.438 32.0542 302.393 32.5522 303.522 32.5522 cv
304.557 32.5522 305.409 32.1465 306.082 31.332 cv
306.752 30.5186 307.09 29.4883 307.09 28.2407 cv
307.09 26.8057 306.688 25.6094 305.882 24.6514 cv
305.077 23.6968 304.07 23.2163 302.869 23.2163 cv
1 1 1 rgb
f
311.358 24.043 mo
311.358 26.9053 ln
311.364 27.041 ln
311.364 27.2305 ln
311.384 27.3608 311.508 27.4258 311.742 27.4258 cv
312.312 27.4395 ln
312.528 27.4316 ln
313.307 27.4175 ln
313.714 27.4175 314.01 27.3521 314.194 27.2202 cv
314.378 27.0903 314.496 26.8618 314.546 26.5405 cv
314.563 26.4248 314.608 26.3672 314.682 26.3672 cv
314.766 26.3672 314.801 26.4414 314.795 26.5903 cv
314.763 27.3003 ln
314.757 27.3921 314.755 27.5386 314.755 27.7393 cv
314.755 28.3003 314.766 28.6558 314.78 28.8091 cv
314.789 28.9004 314.795 28.9678 314.795 29.0112 cv
314.795 29.126 314.755 29.1831 314.677 29.1831 cv
314.588 29.1831 314.52 29.0669 314.473 28.8296 cv
314.419 28.5742 314.36 28.4019 314.297 28.3091 cv
314.237 28.2178 314.131 28.1543 313.984 28.1152 cv
313.692 28.0352 313.255 27.9932 312.685 27.9932 cv
312.153 27.9932 311.81 28.0044 311.655 28.0298 cv
311.496 28.0542 311.409 28.1089 311.393 28.1953 cv
311.369 28.2866 311.358 28.4321 311.358 28.6274 cv
311.358 31.3052 ln
311.358 31.6841 311.449 31.9863 311.641 32.2134 cv
311.826 32.439 312.082 32.5522 312.397 32.5522 cv
312.548 32.5522 312.631 32.6001 312.633 32.6924 cv
312.642 32.8003 312.573 32.854 312.434 32.854 cv
312.334 32.854 312.195 32.8452 312.023 32.8232 cv
311.876 32.8042 311.66 32.7939 311.368 32.7939 cv
310.903 32.7871 ln
310.389 32.7949 ln
310.277 32.7949 310.127 32.8066 309.933 32.8291 cv
309.778 32.8394 309.663 32.8472 309.593 32.854 cv
309.462 32.8594 309.4 32.8164 309.4 32.729 cv
309.4 32.6558 309.471 32.6011 309.604 32.5688 cv
309.888 32.501 310.079 32.3721 310.187 32.1777 cv
310.285 31.9854 310.335 31.6528 310.335 31.1802 cv
310.335 24.6631 ln
310.335 24.2021 310.27 23.8521 310.132 23.605 cv
310.04 23.4404 309.941 23.3301 309.834 23.2734 cv
309.728 23.2144 309.543 23.1733 309.278 23.1494 cv
309.173 23.1406 309.12 23.1001 309.114 23.0239 cv
309.103 22.9072 309.194 22.8467 309.378 22.8467 cv
309.438 22.8467 309.574 22.8594 309.792 22.8818 cv
310.19 22.9272 310.855 22.9478 311.797 22.9478 cv
312.639 22.9478 313.176 22.9409 313.417 22.9272 cv
314.343 22.8745 ln
314.742 22.856 314.998 22.834 315.118 22.8096 cv
315.201 22.7905 315.273 22.7798 315.333 22.7798 cv
315.433 22.7798 315.481 22.835 315.481 22.9468 cv
315.481 23.0049 315.471 23.083 315.448 23.1841 cv
315.369 23.4985 315.331 23.917 315.331 24.4434 cv
315.331 24.6641 315.271 24.7754 315.151 24.7754 cv
315.077 24.7754 315.039 24.7144 315.029 24.5938 cv
315.017 24.4468 314.991 24.2949 314.956 24.1426 cv
314.903 23.8965 314.829 23.7407 314.742 23.6719 cv
314.656 23.6001 314.465 23.5508 314.173 23.5239 cv
313.393 23.436 ln
313.146 23.4111 312.832 23.4004 312.455 23.4004 cv
311.961 23.4004 311.658 23.436 311.539 23.5054 cv
311.417 23.5752 311.358 23.7539 311.358 24.043 cv
f
328.04 22.7754 mo
328.899 22.7754 329.625 22.9121 330.217 23.1851 cv
331.046 23.5645 ln
331.118 23.5972 331.189 23.6152 331.261 23.6152 cv
331.357 23.6152 331.456 23.5737 331.554 23.4863 cv
331.722 23.3301 ln
331.746 23.2974 331.788 23.2798 331.854 23.2798 cv
332.056 23.27 332.154 23.4854 332.154 23.916 cv
332.154 24.064 332.209 24.4995 332.312 25.228 cv
332.499 26.5684 ln
332.537 26.8521 332.559 27.0298 332.559 27.1001 cv
332.559 27.3691 332.47 27.5034 332.293 27.5034 cv
332.155 27.5034 332.025 27.2935 331.89 26.8726 cv
331.603 25.9268 331.019 25.1465 330.14 24.5332 cv
329.259 23.9209 328.281 23.6138 327.195 23.6138 cv
326.34 23.6138 325.62 23.8887 325.045 24.4419 cv
324.465 24.9941 324.178 25.6816 324.178 26.5063 cv
324.178 27.2354 324.366 27.8647 324.741 28.396 cv
325.069 28.8472 325.426 29.1763 325.813 29.3848 cv
326.199 29.5947 327.149 29.9727 328.666 30.5186 cv
331.617 31.5649 333.099 33.2822 333.099 35.6675 cv
333.099 37.2842 332.551 38.6089 331.462 39.6372 cv
330.372 40.6665 328.977 41.1821 327.27 41.1821 cv
326.655 41.1821 325.976 41.0859 325.235 40.8975 cv
324.494 40.709 323.953 40.4907 323.607 40.2412 cv
323.464 40.1382 323.366 40.0283 323.321 39.9106 cv
323.275 39.7935 323.204 39.4917 323.107 39.0073 cv
323.091 38.9375 322.997 38.5439 322.81 37.8242 cv
322.604 37.0449 322.5 36.4897 322.5 36.1587 cv
322.5 35.9019 322.583 35.7744 322.746 35.7842 cv
322.894 35.792 323.024 36.0049 323.139 36.4238 cv
323.426 37.5034 324.027 38.4102 324.952 39.1431 cv
325.873 39.8755 326.88 40.2412 327.963 40.2412 cv
329.057 40.2412 329.986 39.8901 330.749 39.186 cv
331.509 38.4829 331.89 37.6274 331.89 36.6196 cv
331.89 35.6567 331.536 34.8438 330.837 34.1831 cv
330.479 33.8452 329.442 33.3628 327.729 32.7363 cv
325.964 32.0889 324.713 31.3711 323.975 30.5845 cv
323.24 29.7983 322.871 28.7773 322.871 27.5225 cv
322.871 26.1216 323.353 24.9805 324.318 24.0996 cv
325.279 23.2178 326.523 22.7754 328.04 22.7754 cv
f
350.022 24.6436 mo
350.421 27.7573 ln
350.458 28.0811 ln
350.421 28.2109 ln
350.386 28.2896 350.325 28.333 350.246 28.3408 cv
350.15 28.3496 350.012 28.1689 349.819 27.7964 cv
348.32 24.9648 346.279 23.5459 343.708 23.5459 cv
341.656 23.5459 340.038 24.2251 338.855 25.5835 cv
337.676 26.9395 337.084 28.7915 337.084 31.1411 cv
337.084 33.8452 337.738 36.0547 339.055 37.7686 cv
340.364 39.4844 342.054 40.3428 344.117 40.3428 cv
345.32 40.3428 346.506 39.9941 347.673 39.2979 cv
348.833 38.603 349.644 37.7603 350.091 36.7671 cv
350.297 36.3076 350.455 36.0728 350.57 36.0645 cv
350.699 36.0566 350.762 36.1396 350.762 36.3105 cv
350.751 36.4561 ln
350.703 36.7422 ln
350.438 38.3301 ln
350.391 38.5664 ln
350.36 38.7915 350.171 39.0254 349.825 39.2676 cv
347.977 40.5439 345.939 41.1821 343.711 41.1821 cv
341.132 41.1821 339.053 40.3535 337.473 38.7041 cv
335.896 37.0527 335.106 34.8784 335.106 32.1787 cv
335.106 29.4824 335.924 27.2402 337.555 25.4551 cv
339.188 23.6709 341.242 22.7754 343.706 22.7754 cv
345.394 22.7754 346.95 23.187 348.367 24.0132 cv
348.848 24.2842 ln
349.037 24.3745 ln
349.242 24.4526 ln
349.281 24.4526 349.343 24.4189 349.421 24.3491 cv
349.594 24.2168 349.712 24.1494 349.775 24.1494 cv
349.899 24.1494 349.985 24.314 350.022 24.6436 cv
f
356.509 26.915 mo
356.509 36.6426 ln
356.509 37.8574 356.579 38.6592 356.714 39.0483 cv
356.876 39.4917 357.072 39.8037 357.31 39.9863 cv
357.545 40.1665 357.915 40.2983 358.422 40.3755 cv
358.823 40.4331 359.021 40.5366 359.021 40.6841 cv
359.021 40.8799 358.895 40.9795 358.651 40.9795 cv
358.529 40.9795 358.377 40.9639 358.194 40.936 cv
357.943 40.8955 357.521 40.874 356.921 40.874 cv
355.175 40.8457 ln
353.759 40.939 ln
353.524 40.9648 353.331 40.9795 353.179 40.9795 cv
352.963 40.9795 352.854 40.8955 352.854 40.7227 cv
352.854 40.5776 352.978 40.4834 353.229 40.4429 cv
353.834 40.3296 354.228 40.1035 354.402 39.7617 cv
354.576 39.4185 354.666 38.6973 354.666 37.5962 cv
354.666 26.4722 ln
354.666 25.397 354.551 24.6738 354.322 24.3003 cv
354.098 23.9292 353.612 23.6768 352.869 23.5459 cv
352.622 23.4985 352.494 23.3984 352.486 23.2505 cv
352.479 23.0674 352.597 22.9785 352.835 22.9785 cv
352.9 22.9785 352.973 22.9819 353.053 22.9927 cv
353.639 23.0723 354.419 23.1108 355.389 23.1108 cv
355.983 23.1108 356.491 23.0962 356.921 23.0674 cv
357.726 22.9927 ln
357.878 22.9819 357.981 22.9785 358.028 22.9785 cv
358.244 22.9785 358.353 23.0557 358.353 23.2134 cv
358.353 23.3618 358.246 23.4722 358.035 23.5459 cv
357.406 23.8081 ln
356.806 24.0503 356.509 25.0864 356.509 26.915 cv
f
364.557 25.1768 mo
364.557 30.4102 ln
364.557 30.8096 364.588 31.0508 364.657 31.1343 cv
364.726 31.2163 364.93 31.2578 365.275 31.2578 cv
367.116 31.2578 ln
367.952 31.2578 368.617 31.2051 369.104 31.1001 cv
369.532 31.0049 369.813 30.8789 369.941 30.7212 cv
370.068 30.5664 370.185 30.2017 370.289 29.6265 cv
370.328 29.4102 370.438 29.3047 370.609 29.3135 cv
370.776 29.3232 370.854 29.4385 370.854 29.6621 cv
370.854 29.7227 370.852 29.8184 370.842 29.9478 cv
370.762 30.7856 370.724 31.5513 370.724 32.2402 cv
370.724 32.7686 370.756 33.2905 370.826 33.8096 cv
370.847 33.9814 370.854 34.1079 370.854 34.1846 cv
370.854 34.4014 370.776 34.5093 370.609 34.5093 cv
370.43 34.5093 370.321 34.4121 370.289 34.2217 cv
370.217 33.8584 ln
370.118 33.2793 369.929 32.8838 369.641 32.6758 cv
369.351 32.4678 368.864 32.3643 368.18 32.3643 cv
365.525 32.3643 ln
365.136 32.3643 364.874 32.4087 364.739 32.4951 cv
364.608 32.5806 364.545 32.7549 364.545 33.0127 cv
364.557 33.4414 ln
364.557 38.2217 ln
364.557 38.958 364.675 39.4185 364.92 39.5996 cv
365.166 39.7827 365.776 39.874 366.765 39.874 cv
369.896 39.874 371.907 39.1138 372.802 37.5933 cv
372.895 37.4453 372.984 37.3677 373.078 37.3584 cv
373.228 37.3486 373.302 37.4614 373.302 37.6924 cv
373.302 38.252 373.01 38.918 372.426 39.688 cv
371.721 40.6152 370.832 41.0781 369.756 41.0781 cv
369.522 41.0781 369.211 41.0615 368.817 41.0254 cv
367.286 40.8604 366.019 40.7783 365.016 40.7783 cv
363.612 40.7783 362.624 40.8271 362.046 40.9263 cv
361.738 40.9829 361.532 41.0117 361.42 41.0117 cv
361.163 41.0117 361.032 40.9219 361.032 40.7402 cv
361.032 40.5986 361.142 40.5015 361.353 40.4429 cv
361.818 40.2998 ln
362.406 40.1274 362.699 39.5205 362.699 38.48 cv
362.71 37.6367 ln
362.71 26.6577 ln
362.71 25.418 362.582 24.5859 362.332 24.1572 cv
362.078 23.728 361.582 23.5132 360.851 23.5132 cv
360.612 23.5132 360.497 23.4385 360.497 23.2837 cv
360.497 23.0557 360.682 22.9448 361.041 22.9448 cv
361.239 22.9448 361.509 22.9644 361.848 23.0073 cv
362.989 23.1426 364.369 23.2124 365.983 23.2124 cv
366.961 23.2124 367.825 23.1938 368.577 23.1636 cv
370.289 23.0762 ln
370.76 23.0596 371.05 23.0425 371.154 23.0264 cv
371.369 22.9937 371.53 22.9785 371.633 22.9785 cv
371.896 22.9785 372.03 23.1021 372.03 23.3501 cv
372.03 23.4277 372.02 23.5259 371.999 23.6475 cv
371.976 23.7656 371.944 24.1074 371.906 24.6738 cv
371.862 25.4307 ln
371.823 25.9307 371.777 26.2407 371.738 26.3643 cv
371.697 26.4897 371.602 26.5566 371.462 26.5649 cv
371.308 26.5737 371.225 26.4434 371.225 26.1768 cv
371.225 25.8408 ln
371.225 25.5659 371.177 25.3037 371.083 25.0518 cv
370.931 24.665 370.623 24.4072 370.161 24.2764 cv
369.695 24.1484 368.847 24.0835 367.609 24.0835 cv
365.729 24.0835 ln
365.234 24.0835 364.911 24.1494 364.77 24.2852 cv
364.628 24.4219 364.557 24.7183 364.557 25.1768 cv
f
389.499 28.1113 mo
389.499 38.9619 ln
389.499 39.9365 389.479 40.5313 389.443 40.7437 cv
389.4 40.9521 389.288 41.0547 389.101 41.0459 cv
388.979 41.0371 388.887 40.9995 388.824 40.9302 cv
388.562 40.5928 ln
378.453 28.1035 ln
378.33 27.959 ln
378.282 27.9082 378.226 27.8823 378.163 27.8823 cv
378.013 27.8823 377.938 28.0776 377.938 28.4678 cv
377.938 37.3037 ln
377.924 37.8496 ln
377.962 38.7739 ln
378.016 39.3477 378.151 39.7437 378.369 39.9604 cv
378.588 40.1787 379.014 40.3389 379.651 40.4429 cv
379.916 40.4766 380.05 40.584 380.05 40.7651 cv
380.05 40.9302 379.966 41.0117 379.794 41.0117 cv
379.681 41.0117 379.563 41.0024 379.437 40.9854 cv
379.348 40.9697 378.998 40.9438 378.389 40.9102 cv
377.164 40.8457 ln
376.589 40.8691 ln
376.273 40.8691 375.982 40.8906 375.7 40.9316 cv
375.493 40.9629 375.342 40.9795 375.255 40.9795 cv
375.046 40.9795 374.937 40.9009 374.917 40.7476 cv
374.912 40.6265 375.025 40.5244 375.253 40.4429 cv
375.924 40.1919 376.376 39.8535 376.608 39.4321 cv
376.848 39.0098 376.963 38.3301 376.963 37.3887 cv
376.963 28.5171 ln
376.963 27.0137 376.744 25.8262 376.305 24.9609 cv
375.867 24.0967 375.232 23.6021 374.402 23.48 cv
374.189 23.4492 374.079 23.356 374.079 23.2046 cv
374.079 23.0527 374.166 22.9785 374.346 22.9785 cv
374.383 22.9785 374.447 22.9839 374.537 22.9937 cv
375.026 23.0107 ln
375.827 23.0439 ln
376.02 23.0273 ln
376.211 23.0166 376.358 23.0107 376.462 23.0107 cv
376.66 23.0107 376.859 23.1387 377.061 23.3867 cv
388.083 36.8887 ln
388.259 37.104 388.368 37.2056 388.42 37.1978 cv
388.498 37.187 388.544 37.1074 388.551 36.9531 cv
388.551 30.5283 ln
388.563 28.7773 ln
388.42 25.7915 ln
388.342 25.0557 388.141 24.5361 387.826 24.23 cv
387.514 23.9224 386.946 23.6968 386.128 23.5459 cv
385.895 23.5063 385.782 23.4053 385.782 23.2422 cv
385.782 23.0879 385.896 23.0107 386.129 23.0107 cv
386.232 23.0107 386.402 23.022 386.633 23.0459 cv
387.188 23.1113 387.93 23.1445 388.859 23.1445 cv
389.354 23.1445 389.754 23.1221 390.05 23.0771 cv
390.305 23.0332 390.505 23.0107 390.639 23.0107 cv
390.848 23.0107 390.961 23.1001 390.976 23.2754 cv
390.983 23.3848 390.904 23.4639 390.735 23.5132 cv
390.242 23.6426 389.919 23.8589 389.761 24.1602 cv
389.603 24.4634 389.526 25.0288 389.526 25.8574 cv
389.526 27.2563 ln
389.499 28.1113 ln
f
408.046 24.6436 mo
408.446 27.7573 ln
408.484 28.0811 ln
408.449 28.2109 ln
408.41 28.2896 408.353 28.333 408.273 28.3408 cv
408.179 28.3496 408.035 28.1689 407.85 27.7964 cv
406.342 24.9648 404.305 23.5459 401.731 23.5459 cv
399.681 23.5459 398.066 24.2251 396.881 25.5835 cv
395.699 26.9395 395.108 28.7915 395.108 31.1411 cv
395.108 33.8452 395.766 36.0547 397.081 37.7686 cv
398.39 39.4844 400.081 40.3428 402.143 40.3428 cv
403.349 40.3428 404.531 39.9941 405.693 39.2979 cv
406.859 38.603 407.667 37.7603 408.116 36.7671 cv
408.32 36.3076 408.482 36.0728 408.594 36.0645 cv
408.722 36.0566 408.785 36.1396 408.785 36.3105 cv
408.776 36.4561 ln
408.727 36.7422 ln
408.465 38.3301 ln
408.417 38.5664 ln
408.385 38.7915 408.195 39.0254 407.854 39.2676 cv
406.002 40.5439 403.963 41.1821 401.735 41.1821 cv
399.157 41.1821 397.081 40.3535 395.497 38.7041 cv
393.919 37.0527 393.131 34.8784 393.131 32.1787 cv
393.131 29.4824 393.945 27.2402 395.584 25.4551 cv
397.215 23.6709 399.264 22.7754 401.731 22.7754 cv
403.422 22.7754 404.973 23.187 406.388 24.0132 cv
406.868 24.2842 ln
407.063 24.3745 ln
407.269 24.4526 ln
407.307 24.4526 407.368 24.4189 407.444 24.3491 cv
407.618 24.2168 407.737 24.1494 407.801 24.1494 cv
407.925 24.1494 408.008 24.314 408.046 24.6436 cv
f
414.523 25.1768 mo
414.523 30.4102 ln
414.523 30.8096 414.555 31.0508 414.621 31.1343 cv
414.689 31.2163 414.895 31.2578 415.238 31.2578 cv
417.085 31.2578 ln
417.92 31.2578 418.583 31.2051 419.069 31.1001 cv
419.498 31.0049 419.777 30.8789 419.908 30.7212 cv
420.037 30.5664 420.15 30.2017 420.254 29.6265 cv
420.297 29.4102 420.401 29.3047 420.577 29.3135 cv
420.741 29.3232 420.822 29.4385 420.822 29.6621 cv
420.822 29.7227 420.818 29.8184 420.807 29.9478 cv
420.727 30.7856 420.689 31.5513 420.689 32.2402 cv
420.689 32.7686 420.723 33.2905 420.79 33.8096 cv
420.814 33.9814 420.822 34.1079 420.822 34.1846 cv
420.822 34.4014 420.741 34.5093 420.577 34.5093 cv
420.398 34.5093 420.287 34.4121 420.254 34.2217 cv
420.184 33.8584 ln
420.086 33.2793 419.896 32.8838 419.606 32.6758 cv
419.318 32.4678 418.831 32.3643 418.143 32.3643 cv
415.493 32.3643 ln
415.103 32.3643 414.84 32.4087 414.705 32.4951 cv
414.577 32.5806 414.511 32.7549 414.511 33.0127 cv
414.523 33.4414 ln
414.523 38.2217 ln
414.523 38.958 414.644 39.4185 414.886 39.5996 cv
415.129 39.7827 415.746 39.874 416.732 39.874 cv
419.865 39.874 421.874 39.1138 422.769 37.5933 cv
422.859 37.4453 422.952 37.3677 423.045 37.3584 cv
423.197 37.3486 423.27 37.4614 423.27 37.6924 cv
423.27 38.252 422.978 38.918 422.393 39.688 cv
421.688 40.6152 420.801 41.0781 419.723 41.0781 cv
419.491 41.0781 419.175 41.0615 418.783 41.0254 cv
417.252 40.8604 415.984 40.7783 414.984 40.7783 cv
413.58 40.7783 412.589 40.8271 412.013 40.9263 cv
411.705 40.9829 411.5 41.0117 411.386 41.0117 cv
411.13 41.0117 411.001 40.9219 411.001 40.7402 cv
411.001 40.5986 411.104 40.5015 411.319 40.4429 cv
411.787 40.2998 ln
412.369 40.1274 412.666 39.5205 412.666 38.48 cv
412.676 37.6367 ln
412.676 26.6577 ln
412.676 25.418 412.552 24.5859 412.3 24.1572 cv
412.044 23.728 411.549 23.5132 410.817 23.5132 cv
410.581 23.5132 410.467 23.4385 410.467 23.2837 cv
410.467 23.0557 410.644 22.9448 411.008 22.9448 cv
411.209 22.9448 411.475 22.9644 411.811 23.0073 cv
412.955 23.1426 414.338 23.2124 415.95 23.2124 cv
416.926 23.2124 417.794 23.1938 418.549 23.1636 cv
420.254 23.0762 ln
420.726 23.0596 421.019 23.0425 421.118 23.0264 cv
421.336 22.9937 421.496 22.9785 421.601 22.9785 cv
421.863 22.9785 421.997 23.1021 421.997 23.3501 cv
421.997 23.4277 421.989 23.5259 421.964 23.6475 cv
421.942 23.7656 421.911 24.1074 421.874 24.6738 cv
421.828 25.4307 ln
421.786 25.9307 421.747 26.2407 421.708 26.3643 cv
421.666 26.4897 421.569 26.5566 421.43 26.5649 cv
421.271 26.5737 421.192 26.4434 421.192 26.1768 cv
421.192 25.8408 ln
421.192 25.5659 421.143 25.3037 421.049 25.0518 cv
420.896 24.665 420.59 24.4072 420.127 24.2764 cv
419.664 24.1484 418.814 24.0835 417.575 24.0835 cv
415.694 24.0835 ln
415.198 24.0835 414.882 24.1494 414.736 24.2852 cv
414.593 24.4219 414.523 24.7183 414.523 25.1768 cv
f
301.585 5.43945 mo
301.585 12.9731 ln
301.576 13.8491 ln
301.601 14.6079 ln
301.672 15.3354 301.939 15.7607 302.415 15.8813 cv
302.746 15.9722 302.996 16.0146 303.163 16.0146 cv
303.343 16.0146 303.439 16.0674 303.445 16.1655 cv
303.456 16.3096 303.351 16.3818 303.13 16.3818 cv
303.028 16.3818 302.827 16.3691 302.528 16.3403 cv
302.339 16.3262 302.023 16.3184 301.594 16.3184 cv
300.958 16.2988 ln
300.257 16.3066 ln
299.901 16.3066 299.637 16.3174 299.459 16.3403 cv
299.222 16.3691 299.056 16.3818 298.945 16.3818 cv
298.79 16.3818 298.712 16.3271 298.712 16.2168 cv
298.712 16.1113 298.81 16.043 299.008 16.0146 cv
299.47 15.9443 299.78 15.6821 299.953 15.2241 cv
300.122 14.771 300.204 13.9507 300.204 12.7646 cv
300.204 7.31006 ln
300.204 6.05127 300.13 5.25684 299.982 4.92383 cv
299.831 4.5918 299.459 4.3916 298.861 4.32764 cv
298.702 4.31494 298.622 4.25439 298.63 4.14355 cv
298.633 4.00488 298.751 3.93604 298.979 3.93604 cv
299.089 3.93604 299.243 3.95117 299.438 3.97559 cv
299.813 4.02441 300.126 4.04688 300.371 4.04688 cv
300.752 4.04688 301.311 4.01611 302.042 3.95215 cv
302.418 3.92383 302.727 3.90723 302.966 3.90723 cv
304.219 3.90723 305.235 4.2085 306.019 4.81201 cv
306.798 5.41162 307.187 6.19727 307.187 7.16602 cv
307.187 8.33936 306.71 9.26514 305.75 9.93945 cv
305.033 10.4434 304.271 10.6953 303.471 10.6953 cv
303.094 10.6953 302.748 10.6543 302.433 10.5742 cv
302.118 10.4941 301.97 10.4077 301.98 10.3179 cv
301.992 10.2461 302.046 10.2109 302.15 10.2109 cv
302.197 10.2109 302.253 10.2192 302.326 10.2363 cv
302.465 10.2798 302.682 10.3008 302.983 10.3008 cv
303.84 10.3008 304.527 10.062 305.039 9.58398 cv
305.556 9.11035 305.811 8.47656 305.811 7.68506 cv
305.811 6.77393 305.472 6.02002 304.792 5.42188 cv
304.114 4.82666 303.258 4.52686 302.219 4.52686 cv
301.98 4.52686 301.816 4.57178 301.729 4.66309 cv
301.639 4.75244 301.594 4.9248 301.594 5.17773 cv
301.585 5.43945 ln
f
314.602 10.1558 mo
317.089 13.792 ln
317.376 14.2217 ln
318.144 15.3394 318.851 15.9194 319.501 15.9604 cv
319.787 15.9795 ln
319.896 15.9858 319.948 16.0278 319.941 16.1074 cv
319.936 16.2002 319.801 16.2822 319.541 16.3569 cv
319.28 16.4297 318.983 16.4663 318.658 16.4663 cv
318.113 16.4663 317.627 16.3184 317.198 16.0259 cv
316.771 15.7285 316.335 15.2461 315.889 14.5786 cv
313.649 11.1733 ln
313.521 10.9785 ln
313.377 10.7314 313.146 10.6108 312.82 10.6108 cv
311.629 10.6108 ln
311.431 10.645 ln
311.358 10.6885 311.323 10.7847 311.323 10.9355 cv
311.323 13.751 ln
311.334 14.1147 ln
311.334 14.6309 311.356 14.9849 311.409 15.1748 cv
311.46 15.3652 311.583 15.5347 311.77 15.6855 cv
312.029 15.8896 312.43 16.0195 312.965 16.0732 cv
313.177 16.0962 313.289 16.1616 313.294 16.2681 cv
313.305 16.3818 313.208 16.4385 312.999 16.4385 cv
312.913 16.4385 312.737 16.4253 312.463 16.4033 cv
312.22 16.3755 311.838 16.3638 311.322 16.3638 cv
310.456 16.354 ln
309.986 16.3633 ln
309.783 16.3633 309.537 16.3774 309.25 16.4048 cv
309.015 16.4277 308.853 16.4385 308.763 16.4385 cv
308.609 16.4385 308.534 16.3755 308.534 16.2524 cv
308.534 16.1626 308.612 16.1035 308.765 16.0732 cv
309.249 15.9814 309.565 15.7646 309.716 15.418 cv
309.868 15.0708 309.943 14.3882 309.943 13.3706 cv
309.943 6.87939 ln
309.926 5.93945 ln
309.926 4.99902 309.6 4.47461 308.941 4.36475 cv
308.516 4.30176 ln
308.325 4.2666 308.226 4.19775 308.226 4.0918 cv
308.226 3.96973 308.33 3.90723 308.533 3.90723 cv
308.579 3.90723 308.789 3.9248 309.164 3.95605 cv
309.378 3.98096 309.646 3.99121 309.962 3.99121 cv
310.237 3.99121 310.708 3.97559 311.374 3.94385 cv
311.856 3.91992 312.279 3.90723 312.642 3.90723 cv
314.021 3.90723 315.062 4.16797 315.764 4.6875 cv
316.464 5.20996 316.813 5.98389 316.813 7.01465 cv
316.813 8.36816 316.076 9.41553 314.602 10.1558 cv
cp
311.963 9.96191 mo
312.985 9.96191 ln
313.776 9.96191 314.394 9.74414 314.844 9.30713 cv
315.297 8.87012 315.522 8.27441 315.522 7.51855 cv
315.522 6.64014 315.216 5.9165 314.602 5.34961 cv
313.983 4.7832 313.206 4.49854 312.253 4.49854 cv
311.898 4.49854 311.655 4.55957 311.521 4.67578 cv
311.384 4.79395 311.316 5.00879 311.316 5.31641 cv
311.323 5.61768 ln
311.323 9.30713 ln
311.323 9.59326 311.361 9.77344 311.436 9.8501 cv
311.515 9.92529 311.69 9.96191 311.963 9.96191 cv
f
326.107 3.76758 mo
327.983 3.76758 329.521 4.34619 330.721 5.50684 cv
331.925 6.66553 332.524 8.15039 332.524 9.96094 cv
332.524 11.8779 331.919 13.4536 330.708 14.6816 cv
329.498 15.9087 327.949 16.522 326.061 16.522 cv
324.125 16.522 322.558 15.936 321.364 14.7632 cv
320.17 13.5869 319.572 12.0483 319.572 10.1406 cv
319.572 9.31299 319.728 8.49512 320.041 7.68262 cv
320.357 6.87061 320.782 6.19141 321.315 5.646 cv
321.88 5.07178 322.589 4.61426 323.452 4.2749 cv
324.319 3.9375 325.202 3.76758 326.107 3.76758 cv
cp
325.535 4.35791 mo
324.136 4.35791 323.028 4.82764 322.21 5.76221 cv
321.388 6.69824 320.979 7.95703 320.979 9.54102 cv
320.979 11.3545 321.505 12.8779 322.552 14.124 cv
323.601 15.3677 324.889 15.9883 326.417 15.9883 cv
327.806 15.9883 328.961 15.4829 329.867 14.4697 cv
330.775 13.4565 331.232 12.1704 331.232 10.6177 cv
331.232 8.82959 330.684 7.33984 329.598 6.14844 cv
328.51 4.95801 327.155 4.35791 325.535 4.35791 cv
f
345.215 5.06543 mo
345.496 7.22119 ln
345.521 7.44531 ln
345.496 7.53613 ln
345.467 7.58887 345.421 7.61865 345.363 7.62451 cv
345.293 7.63037 345.186 7.50684 345.044 7.24707 cv
343.922 5.28369 342.399 4.30176 340.474 4.30176 cv
338.941 4.30176 337.734 4.77246 336.851 5.71094 cv
335.968 6.65088 335.524 7.93213 335.524 9.56104 cv
335.524 11.4346 336.015 12.9634 336.994 14.1514 cv
337.976 15.3374 339.237 15.9312 340.778 15.9312 cv
341.679 15.9312 342.563 15.6929 343.432 15.2124 cv
344.301 14.7339 344.904 14.1528 345.241 13.4692 cv
345.396 13.1523 345.518 12.9907 345.605 12.9839 cv
345.699 12.979 345.746 13.0361 345.746 13.1553 cv
345.738 13.2539 ln
345.705 13.4556 ln
345.502 14.5601 ln
345.467 14.7212 ln
345.441 14.8774 345.301 15.0381 345.044 15.2061 cv
343.658 16.085 342.135 16.522 340.468 16.522 cv
338.537 16.522 336.983 15.9517 335.804 14.8066 cv
334.623 13.6611 334.033 12.1543 334.033 10.2852 cv
334.033 8.41455 334.646 6.86182 335.867 5.62354 cv
337.088 4.38525 338.622 3.76758 340.469 3.76758 cv
341.736 3.76758 342.896 4.05225 343.955 4.62109 cv
344.316 4.81348 ln
344.46 4.87598 ln
344.613 4.92969 ln
344.642 4.92969 344.688 4.90527 344.746 4.8584 cv
344.883 4.77051 344.976 4.72461 345.021 4.72461 cv
345.119 4.72461 345.185 4.83691 345.215 5.06543 cv
f
350.067 5.42773 mo
350.067 9.06543 ln
350.067 9.34131 350.091 9.50977 350.141 9.56641 cv
350.194 9.62402 350.346 9.65234 350.603 9.65234 cv
351.98 9.65234 ln
352.604 9.65234 353.098 9.6167 353.46 9.54248 cv
353.784 9.47852 353.989 9.38867 354.09 9.27979 cv
354.181 9.17188 354.268 8.91797 354.344 8.51904 cv
354.378 8.36719 354.457 8.29541 354.585 8.30176 cv
354.709 8.30859 354.768 8.3877 354.768 8.54443 cv
354.768 8.58594 354.765 8.65283 354.76 8.74219 cv
354.711 9.32324 354.685 9.85303 354.685 10.3325 cv
354.685 10.6978 354.707 11.0596 354.746 11.4199 cv
354.762 11.54 354.768 11.6265 354.768 11.6797 cv
354.768 11.8301 354.709 11.9048 354.585 11.9048 cv
354.449 11.9048 354.373 11.8389 354.344 11.7065 cv
354.291 11.4531 ln
354.223 11.0493 354.078 10.7759 353.864 10.6289 cv
353.648 10.4854 353.282 10.4136 352.77 10.4136 cv
350.792 10.4136 ln
350.499 10.4136 350.302 10.4434 350.206 10.5029 cv
350.104 10.5645 350.059 10.6846 350.059 10.8667 cv
350.067 11.165 ln
350.067 14.5 ln
350.067 15.0127 350.153 15.334 350.338 15.4614 cv
350.517 15.5864 350.979 15.6494 351.719 15.6494 cv
354.062 15.6494 355.564 15.123 356.232 14.0664 cv
356.305 13.9629 356.375 13.9106 356.451 13.9048 cv
356.567 13.8989 356.628 13.9756 356.628 14.1338 cv
356.628 14.519 356.408 14.9785 355.974 15.5103 cv
355.446 16.1479 354.782 16.4663 353.979 16.4663 cv
353.807 16.4663 353.575 16.4551 353.28 16.4316 cv
352.139 16.3232 351.191 16.2705 350.445 16.2705 cv
349.396 16.2705 348.658 16.3057 348.229 16.3774 cv
348.002 16.418 347.844 16.4385 347.762 16.4385 cv
347.573 16.4385 347.477 16.3755 347.477 16.251 cv
347.477 16.1528 347.552 16.0859 347.705 16.043 cv
348.042 15.9443 ln
348.465 15.8262 348.677 15.4038 348.677 14.6816 cv
348.686 14.0938 ln
348.686 6.4624 ln
348.686 5.59912 348.593 5.01855 348.402 4.72168 cv
348.219 4.42285 347.853 4.27344 347.311 4.27344 cv
347.139 4.27344 347.054 4.2207 347.054 4.11426 cv
347.054 3.95703 347.189 3.87988 347.459 3.87988 cv
347.607 3.87988 347.806 3.89551 348.06 3.92676 cv
348.913 4.02637 349.946 4.07715 351.15 4.07715 cv
351.882 4.07715 352.529 4.06543 353.091 4.04053 cv
354.367 3.979 ln
354.721 3.96777 354.935 3.95508 355.015 3.94385 cv
355.175 3.91992 355.294 3.90723 355.373 3.90723 cv
355.568 3.90723 355.67 3.9917 355.67 4.16504 cv
355.67 4.21875 355.66 4.28662 355.641 4.36963 cv
355.621 4.45313 355.598 4.68848 355.566 5.08154 cv
355.529 5.60596 ln
355.496 5.94727 355.465 6.16113 355.436 6.24707 cv
355.403 6.3335 355.333 6.37939 355.228 6.38477 cv
355.107 6.39209 355.049 6.30176 355.049 6.11914 cv
355.049 5.88477 ln
355.049 5.69531 355.015 5.5127 354.941 5.34082 cv
354.829 5.07178 354.599 4.89307 354.252 4.80273 cv
353.905 4.71143 353.273 4.66699 352.345 4.66699 cv
350.939 4.66699 ln
350.572 4.66699 350.333 4.71582 350.226 4.80908 cv
350.121 4.90088 350.067 5.10791 350.067 5.42773 cv
f
360.831 5.42773 mo
360.831 9.06543 ln
360.831 9.34131 360.854 9.50977 360.905 9.56641 cv
360.957 9.62402 361.109 9.65234 361.365 9.65234 cv
362.744 9.65234 ln
363.368 9.65234 363.862 9.6167 364.225 9.54248 cv
364.548 9.47852 364.756 9.38867 364.854 9.27979 cv
364.946 9.17188 365.032 8.91797 365.111 8.51904 cv
365.143 8.36719 365.221 8.29541 365.352 8.30176 cv
365.47 8.30859 365.533 8.3877 365.533 8.54443 cv
365.533 8.58594 365.53 8.65283 365.523 8.74219 cv
365.475 9.32324 365.446 9.85303 365.446 10.3325 cv
365.446 10.6978 365.468 11.0596 365.512 11.4199 cv
365.525 11.54 365.533 11.6265 365.533 11.6797 cv
365.533 11.8301 365.47 11.9048 365.352 11.9048 cv
365.217 11.9048 365.136 11.8389 365.111 11.7065 cv
365.055 11.4531 ln
364.984 11.0493 364.843 10.7759 364.628 10.6289 cv
364.41 10.4854 364.047 10.4136 363.533 10.4136 cv
361.555 10.4136 ln
361.264 10.4136 361.067 10.4434 360.967 10.5029 cv
360.868 10.5645 360.819 10.6846 360.819 10.8667 cv
360.831 11.165 ln
360.831 14.5 ln
360.831 15.0127 360.921 15.334 361.102 15.4614 cv
361.284 15.5864 361.745 15.6494 362.482 15.6494 cv
364.825 15.6494 366.328 15.123 366.995 14.0664 cv
367.068 13.9629 367.14 13.9106 367.214 13.9048 cv
367.334 13.8989 367.393 13.9756 367.393 14.1338 cv
367.393 14.519 367.172 14.9785 366.733 15.5103 cv
366.212 16.1479 365.545 16.4663 364.744 16.4663 cv
364.57 16.4663 364.338 16.4551 364.043 16.4316 cv
362.901 16.3232 361.957 16.2705 361.209 16.2705 cv
360.162 16.2705 359.424 16.3057 358.993 16.3774 cv
358.768 16.418 358.611 16.4385 358.525 16.4385 cv
358.337 16.4385 358.238 16.3755 358.238 16.251 cv
358.238 16.1528 358.315 16.0859 358.468 16.043 cv
358.806 15.9443 ln
359.227 15.8262 359.44 15.4038 359.44 14.6816 cv
359.449 14.0938 ln
359.449 6.4624 ln
359.449 5.59912 359.357 5.01855 359.17 4.72168 cv
358.98 4.42285 358.617 4.27344 358.075 4.27344 cv
357.903 4.27344 357.816 4.2207 357.816 4.11426 cv
357.816 3.95703 357.949 3.87988 358.221 3.87988 cv
358.37 3.87988 358.57 3.89551 358.823 3.92676 cv
359.678 4.02637 360.71 4.07715 361.913 4.07715 cv
362.646 4.07715 363.293 4.06543 363.855 4.04053 cv
365.132 3.979 ln
365.486 3.96777 365.702 3.95508 365.776 3.94385 cv
365.94 3.91992 366.06 3.90723 366.137 3.90723 cv
366.335 3.90723 366.434 3.9917 366.434 4.16504 cv
366.434 4.21875 366.425 4.28662 366.405 4.36963 cv
366.385 4.45313 366.363 4.68848 366.329 5.08154 cv
366.291 5.60596 ln
366.262 5.94727 366.232 6.16113 366.2 6.24707 cv
366.164 6.3335 366.1 6.37939 365.994 6.38477 cv
365.873 6.39209 365.814 6.30176 365.814 6.11914 cv
365.814 5.88477 ln
365.814 5.69531 365.776 5.5127 365.707 5.34082 cv
365.594 5.07178 365.361 4.89307 365.017 4.80273 cv
364.672 4.71143 364.037 4.66699 363.111 4.66699 cv
361.706 4.66699 ln
361.338 4.66699 361.096 4.71582 360.993 4.80908 cv
360.883 4.90088 360.831 5.10791 360.831 5.42773 cv
f
370.215 6.15918 mo
370.215 5.5542 370.112 5.10791 369.91 4.82666 cv
369.709 4.54297 369.372 4.37891 368.902 4.32959 cv
368.708 4.3125 368.611 4.25049 368.611 4.14209 cv
368.611 4.02441 368.686 3.96387 368.843 3.96387 cv
369.555 4.00928 ln
369.626 4.01709 369.835 4.02002 370.183 4.02002 cv
370.789 4.02002 371.26 4.00488 371.595 3.97559 cv
372.43 3.89551 ln
372.792 3.86523 373.187 3.85156 373.619 3.85156 cv
376.076 3.85156 377.918 4.46875 379.147 5.7041 cv
380.271 6.82861 380.83 8.26953 380.83 10.0229 cv
380.83 11.1558 380.588 12.1943 380.095 13.1421 cv
379.603 14.0884 378.921 14.8335 378.043 15.3774 cv
376.938 16.0674 375.734 16.4106 374.426 16.4106 cv
374.271 16.4106 373.995 16.3984 373.6 16.3726 cv
372.798 16.3223 372.098 16.2988 371.507 16.2988 cv
370.862 16.2988 370.306 16.3281 369.83 16.3901 cv
369.616 16.416 369.442 16.4336 369.318 16.4385 cv
369.109 16.4507 369.006 16.3848 369.006 16.2432 cv
369.006 16.1445 369.086 16.0806 369.253 16.043 cv
369.657 15.9604 369.918 15.8105 370.038 15.5947 cv
370.154 15.3774 370.215 14.937 370.215 14.2695 cv
370.215 6.15918 ln
cp
371.594 5.45215 mo
371.594 14.6768 ln
371.594 15.041 371.776 15.292 372.142 15.4292 cv
372.459 15.5488 372.864 15.6523 373.356 15.7402 cv
373.851 15.8311 374.27 15.8765 374.608 15.8765 cv
375.632 15.8765 376.55 15.6187 377.371 15.1064 cv
378.758 14.2461 379.452 12.7852 379.452 10.7227 cv
379.452 9.60156 379.234 8.56885 378.799 7.62744 cv
378.367 6.68359 377.771 5.94434 377.012 5.40869 cv
376.084 4.74658 374.959 4.41406 373.63 4.41406 cv
372.685 4.41406 372.085 4.51709 371.83 4.71875 cv
371.672 4.83691 371.594 5.08252 371.594 5.45215 cv
f
385.271 6.63477 mo
385.271 13.375 ln
385.271 14.2153 385.321 14.771 385.429 15.041 cv
385.546 15.3486 385.693 15.5645 385.872 15.6904 cv
386.052 15.8164 386.328 15.9067 386.706 15.9604 cv
387.006 16.001 387.16 16.0723 387.16 16.1753 cv
387.16 16.3135 387.067 16.3818 386.88 16.3818 cv
386.787 16.3818 386.676 16.3745 386.539 16.354 cv
386.354 16.3291 386.029 16.3154 385.582 16.3154 cv
384.277 16.2988 ln
383.214 16.3569 ln
383.042 16.3745 382.897 16.3818 382.786 16.3818 cv
382.621 16.3818 382.541 16.3242 382.541 16.208 cv
382.541 16.1094 382.634 16.043 382.819 16.0146 cv
383.272 15.937 383.563 15.7803 383.695 15.543 cv
383.824 15.3076 383.893 14.8066 383.893 14.043 cv
383.893 6.33008 ln
383.893 5.58496 383.805 5.08252 383.637 4.82471 cv
383.467 4.56592 383.104 4.3916 382.546 4.30176 cv
382.361 4.26758 382.267 4.19873 382.258 4.09814 cv
382.253 3.9707 382.341 3.90723 382.521 3.90723 cv
382.57 3.90723 382.622 3.91016 382.683 3.91602 cv
383.123 3.96777 383.705 3.99121 384.434 3.99121 cv
384.879 3.99121 385.26 3.98291 385.576 3.96387 cv
386.182 3.91602 ln
386.296 3.91016 386.372 3.90723 386.408 3.90723 cv
386.572 3.90723 386.65 3.9624 386.65 4.07031 cv
386.65 4.17383 386.574 4.25146 386.417 4.30176 cv
385.943 4.4834 ln
385.497 4.65088 385.271 5.36865 385.271 6.63477 cv
f
399.251 7.48291 mo
399.251 14.9956 ln
399.251 15.6724 399.231 16.082 399.204 16.229 cv
399.173 16.3755 399.084 16.4448 398.945 16.4385 cv
398.854 16.4336 398.787 16.4058 398.741 16.3584 cv
398.541 16.125 ln
390.961 7.46582 ln
390.871 7.3667 ln
390.832 7.33008 390.794 7.31445 390.744 7.31445 cv
390.631 7.31445 390.579 7.44922 390.579 7.71875 cv
390.579 13.8198 ln
390.564 14.1978 ln
390.593 14.8354 ln
390.636 15.2305 390.737 15.5073 390.899 15.6543 cv
391.062 15.8066 391.379 15.915 391.854 15.9883 cv
392.051 16.0117 392.152 16.0859 392.152 16.2114 cv
392.152 16.3252 392.09 16.3818 391.963 16.3818 cv
391.875 16.3818 391.786 16.3784 391.693 16.3706 cv
391.626 16.3613 391.364 16.3481 390.904 16.3315 cv
389.983 16.2988 ln
389.551 16.3135 ln
389.315 16.3135 389.091 16.3262 388.882 16.3516 cv
388.724 16.3735 388.611 16.3818 388.548 16.3818 cv
388.387 16.3818 388.307 16.3291 388.294 16.2251 cv
388.287 16.1411 388.37 16.0723 388.548 16.0146 cv
389.053 15.8438 389.396 15.6094 389.575 15.3188 cv
389.754 15.0278 389.843 14.5576 389.843 13.9077 cv
389.843 7.78076 ln
389.843 6.74023 389.677 5.92383 389.343 5.3252 cv
389.018 4.72705 388.541 4.38525 387.916 4.30176 cv
387.753 4.27979 387.673 4.2124 387.673 4.10303 cv
387.673 3.99023 387.741 3.93604 387.872 3.93604 cv
387.9 3.93604 387.951 3.93896 388.017 3.94385 cv
388.383 3.95117 ln
388.985 3.96387 ln
389.135 3.95117 ln
389.275 3.94092 389.387 3.93604 389.467 3.93604 cv
389.616 3.93604 389.765 4.02295 389.914 4.1958 cv
398.189 13.5562 ln
398.315 13.7056 398.399 13.7783 398.438 13.7715 cv
398.498 13.7656 398.527 13.71 398.535 13.6001 cv
398.535 9.14453 ln
398.543 7.9292 ln
398.438 5.85889 ln
398.375 5.34961 398.229 4.98828 397.992 4.77539 cv
397.76 4.56152 397.333 4.4043 396.72 4.30176 cv
396.546 4.27344 396.459 4.20361 396.459 4.0957 cv
396.459 3.98828 396.546 3.93604 396.721 3.93604 cv
396.799 3.93604 396.926 3.94385 397.099 3.95947 cv
397.511 4.00049 398.066 4.02002 398.763 4.02002 cv
399.134 4.02002 399.433 4.00732 399.653 3.97803 cv
399.846 3.95117 399.992 3.93604 400.095 3.93604 cv
400.25 3.93604 400.331 4.00049 400.345 4.12695 cv
400.35 4.20654 400.291 4.26563 400.167 4.30176 cv
399.799 4.3916 399.559 4.54102 399.439 4.75049 cv
399.325 4.96094 399.265 5.35205 399.265 5.9248 cv
399.265 6.89209 ln
399.251 7.48291 ln
f
412.15 13.2319 mo
412.15 11.2104 ln
412.15 10.8467 412.069 10.5996 411.911 10.4683 cv
411.752 10.3345 411.438 10.252 410.957 10.2153 cv
410.728 10.1929 410.607 10.1157 410.6 9.9873 cv
410.594 9.87695 410.697 9.82129 410.906 9.82129 cv
411.267 9.83008 ln
411.942 9.83887 ln
412.87 9.83887 413.411 9.83154 413.557 9.81982 cv
413.972 9.78223 414.213 9.76563 414.278 9.76563 cv
414.418 9.76563 414.485 9.81982 414.485 9.92432 cv
414.485 10.0181 414.396 10.0864 414.216 10.1318 cv
413.757 10.2402 413.529 10.5742 413.529 11.1333 cv
413.537 11.4229 ln
413.537 14.3325 ln
413.555 14.623 ln
413.499 14.7612 ln
413.464 14.79 413.381 14.8159 413.24 14.8335 cv
413.077 14.8564 412.83 14.9644 412.493 15.1563 cv
411.9 15.5073 ln
410.734 16.1851 409.474 16.522 408.134 16.522 cv
406.332 16.522 404.859 15.9482 403.709 14.7949 cv
402.558 13.6411 401.982 12.166 401.982 10.3696 cv
401.982 8.4834 402.596 6.91162 403.814 5.65283 cv
405.036 4.39697 406.563 3.76758 408.403 3.76758 cv
409.109 3.76758 409.861 3.86719 410.654 4.07031 cv
411.45 4.27246 412.085 4.52441 412.563 4.82764 cv
412.634 4.87402 412.684 4.89795 412.713 4.89795 cv
412.755 4.89795 412.812 4.87402 412.887 4.82764 cv
413.102 4.66406 ln
413.144 4.62939 413.186 4.61133 413.225 4.61133 cv
413.333 4.61133 413.389 4.75146 413.389 5.0332 cv
413.389 5.16504 413.41 5.36914 413.441 5.64404 cv
413.529 6.48682 ln
413.559 6.71387 413.598 6.94141 413.651 7.16699 cv
413.684 7.27637 413.698 7.36377 413.698 7.43018 cv
413.698 7.57275 413.64 7.64551 413.523 7.6543 cv
413.447 7.65967 413.387 7.6084 413.332 7.50195 cv
412.863 6.55371 412.142 5.7832 411.166 5.18945 cv
410.191 4.59814 409.156 4.30176 408.071 4.30176 cv
406.712 4.30176 405.599 4.81396 404.736 5.83936 cv
403.876 6.86475 403.447 8.18701 403.447 9.80957 cv
403.447 11.5508 403.938 13.0044 404.928 14.1743 cv
405.915 15.3472 407.137 15.9312 408.594 15.9312 cv
409.984 15.9312 411.075 15.4419 411.861 14.4604 cv
412.054 14.2217 412.15 13.8115 412.15 13.2319 cv
f
419.789 3.76758 mo
420.426 3.76758 420.97 3.85889 421.413 4.04199 cv
422.031 4.30273 ln
422.087 4.32764 422.138 4.33838 422.194 4.33838 cv
422.265 4.33838 422.336 4.30811 422.406 4.25049 cv
422.531 4.1416 ln
422.548 4.1167 422.58 4.10449 422.627 4.10449 cv
422.779 4.09912 422.852 4.24707 422.852 4.54688 cv
422.852 4.64844 422.891 4.95215 422.969 5.45654 cv
423.113 6.38281 ln
423.146 6.58203 423.16 6.70605 423.16 6.75488 cv
423.16 6.94141 423.095 7.03418 422.96 7.03418 cv
422.859 7.03418 422.757 6.88818 422.653 6.6001 cv
422.44 5.9502 422.007 5.4126 421.353 4.99121 cv
420.696 4.56982 419.97 4.35791 419.159 4.35791 cv
418.516 4.35791 417.984 4.5498 417.555 4.93164 cv
417.123 5.31201 416.911 5.78809 416.911 6.35742 cv
416.911 6.86279 417.051 7.29883 417.333 7.66504 cv
417.575 7.97656 417.845 8.20508 418.134 8.34961 cv
418.424 8.49512 419.135 8.75537 420.271 9.1333 cv
422.478 9.85889 423.582 11.0483 423.582 12.7031 cv
423.582 13.8242 423.177 14.7388 422.364 15.4536 cv
421.547 16.1665 420.504 16.522 419.229 16.522 cv
418.766 16.522 418.258 16.4575 417.707 16.3281 cv
417.149 16.1982 416.744 16.0459 416.485 15.8765 cv
416.378 15.8037 416.308 15.7266 416.27 15.6445 cv
416.235 15.5645 416.176 15.3564 416.106 15.0166 cv
416.093 14.9702 416.018 14.6963 415.878 14.1958 cv
415.72 13.6543 415.643 13.2686 415.643 13.0415 cv
415.643 12.8599 415.703 12.7725 415.826 12.7793 cv
415.938 12.7842 416.034 12.9321 416.123 13.2236 cv
416.336 13.9736 416.79 14.605 417.483 15.1123 cv
418.176 15.6216 418.928 15.8765 419.736 15.8765 cv
420.563 15.8765 421.258 15.6323 421.828 15.144 cv
422.395 14.6558 422.682 14.0625 422.682 13.3638 cv
422.682 12.6938 422.42 12.1318 421.895 11.6743 cv
421.628 11.4395 420.851 11.1035 419.566 10.6714 cv
418.24 10.2222 417.304 9.72363 416.752 9.17969 cv
416.2 8.6333 415.924 7.92627 415.924 7.05713 cv
415.924 6.0874 416.284 5.29492 417.006 4.68457 cv
417.726 4.07324 418.653 3.76758 419.789 3.76758 cv
f
grestore
grestore
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
Adobe_AGM_Core/page_trailer get exec
%%Trailer
Adobe_AGM_Core/doc_trailer get exec
%%EOF
